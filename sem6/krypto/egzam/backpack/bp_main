class Item:
    def __init__(self, name, weight, value):
        self.name = name
        self.weight = weight
        self.value = value

class Knapsack:
    def __init__(self, capacity):
        self.capacity = capacity
        self.items = []

    def add_item(self, item):
        if self.get_total_weight() + item.weight <= self.capacity:
            self.items.append(item)
            return True
        else:
            print("Item {} cannot be added to the knapsack due to capacity constraint.".format(item.name))
            return False

    def get_total_weight(self):
        return sum(item.weight for item in self.items)

    def get_total_value(self):
        return sum(item.value for item in self.items)

    def display_contents(self):
        print("Knapsack contents:")
        for item in self.items:
            print("- {} (Weight: {}, Value: {})".format(item.name, item.weight, item.value))

# Example usage:
item1 = Item("Laptop", 3, 1000)
item2 = Item("Water Bottle", 1, 20)
item3 = Item("Book", 2, 50)

knapsack = Knapsack(5)
knapsack.add_item(item1)
knapsack.add_item(item2)
knapsack.add_item(item3)

print("Total weight in knapsack:", knapsack.get_total_weight())
print("Total value in knapsack:", knapsack.get_total_value())

knapsack.display_contents()